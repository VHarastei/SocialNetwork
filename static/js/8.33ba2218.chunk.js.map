{"version":3,"sources":["components/Users/PeopleProfile/Contacts.tsx","components/Users/PeopleProfile/EditDialog.tsx","components/Users/PeopleProfile/PeopleProfile.tsx","components/ProfilePage/MyProfilePage.tsx"],"names":["Contacts","contacts","contactsIcons","List","Object","keys","map","key","index","ListItem","Box","style","color","marginRight","Typography","variant","toLocaleUpperCase","slice","useStyles","makeStyles","avatar","width","height","backgroundColor","fontSize","margin","uploadPhoto","marginBottom","float","title","marginTop","button","background","loginSchema","Yup","shape","facebook","url","EditDialog","classes","profile","useSelector","state","profilePage","status","useState","open","setOpen","newPhotoFile","setNewPhotoFile","newPhotoUrl","setNewPhotoUrl","dispatch","useDispatch","Preloader","initialProfile","vk","github","instagram","mainLink","twitter","website","youtube","handleClose","onSavePhoto","e","target","files","length","newImage","URL","createObjectURL","Button","className","onClick","Dialog","onClose","aria-labelledby","fullWidth","id","validationSchema","initialValues","onSubmit","formData","console","log","saveProfile","updateStatus","savePhoto","errors","touched","isSubmitting","dividers","component","gutterBottom","type","hidden","name","onChange","Avatar","alt","fullName","src","photos","large","aria-label","toUpperCase","as","TextField","label","FormControlLabel","control","Checkbox","defaultChecked","lookingForAJob","autoFocus","disabled","ContactsFields","DialogTitle","withStyles","theme","createStyles","root","padding","spacing","closeButton","position","right","top","palette","grey","props","children","other","disableTypography","IconButton","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","container","paper","maxWidth","display","flexDirection","contactsPaper","link","textDecoration","decriptionBox","marginLeft","PeopleProfile","backBtnPath","editProfile","history","useHistory","Container","push","pathname","Paper","aboutMe","lookingForAJobDescription","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","MyProfilePage","userId","auth","useEffect","getStatus","getUserProfile"],"mappings":"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","file":"static/js/8.33ba2218.chunk.js","sourcesContent":["import { Box, List, ListItem, Typography } from '@material-ui/core';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport React, { FC } from 'react';\r\nimport { ContactsType } from '../../../types/types';\r\n\r\ntype ContactsPropsType = {\r\n  contacts: ContactsType;\r\n};\r\n\r\nexport const Contacts: FC<ContactsPropsType> = ({ contacts }) => {\r\n  let contactsIcons = [\r\n    <FacebookIcon />,\r\n    <WebIcon />,\r\n    <ContactsIcon />,\r\n    <TwitterIcon />,\r\n    <InstagramIcon />,\r\n    <YouTubeIcon />,\r\n    <GitHubIcon />,\r\n    <LinkIcon />,\r\n  ];\r\n\r\n  return (\r\n    <List>\r\n      {(Object.keys(contacts) as Array<keyof typeof contacts>).map((key, index) => {\r\n        return (\r\n          <ListItem key={index}>\r\n            <Box style={{ color: '#f3673b', marginRight: 6 }}>{contactsIcons[index]}</Box>\r\n            <Typography variant=\"subtitle1\">\r\n              {key[0].toLocaleUpperCase() + key.slice(1)}: {contacts[key]}\r\n            </Typography>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n","import { Avatar, Box, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport React, { ChangeEvent, FC, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { savePhoto, saveProfile, updateStatus } from '../../../redux/profileReducer';\r\nimport { AppStateType } from '../../../redux/reduxStore';\r\nimport { ContactsType } from '../../../types/types';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    width: 350,\r\n    height: 350,\r\n    backgroundColor: '#f3673b',\r\n    fontSize: 128,\r\n    margin: '16px auto',\r\n  },\r\n  uploadPhoto: {\r\n    marginBottom: 10,\r\n    float: 'right',\r\n  },\r\n  title: {\r\n    marginTop: 16,\r\n  },\r\n  button: {\r\n    '&:hover': { background: '#ff3300' },\r\n    \r\n  },\r\n});\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  facebook: Yup.string().url(),\r\n});\r\n\r\nexport const EditDialog = () => {\r\n  const classes = useStyles();\r\n\r\n  const profile = useSelector((state: AppStateType) => state.profilePage.profile);\r\n  const status = useSelector((state: AppStateType) => state.profilePage.status);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [newPhotoFile, setNewPhotoFile] = useState<any>();\r\n  const [newPhotoUrl, setNewPhotoUrl] = useState<any>();\r\n  \r\n  const dispatch = useDispatch();\r\n  if (!profile) return <Preloader />;\r\n\r\n  const initialProfile = {\r\n    ...profile,\r\n    contacts: {\r\n      facebook: profile.contacts.facebook ? profile.contacts.facebook : '',\r\n      vk: profile.contacts.vk ? profile.contacts.vk : '',\r\n      github: profile.contacts.github ? profile.contacts.github : '',\r\n      instagram: profile.contacts.instagram ? profile.contacts.instagram : '',\r\n      mainLink: profile.contacts.mainLink ? profile.contacts.mainLink : '',\r\n      twitter: profile.contacts.twitter ? profile.contacts.twitter : '',\r\n      website: profile.contacts.website ? profile.contacts.website : '',\r\n      youtube: profile.contacts.youtube ? profile.contacts.youtube : '',\r\n    },\r\n    status,\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setNewPhotoUrl('');\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onSavePhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files.length) {\r\n      const newImage = e.target.files[0];\r\n      setNewPhotoFile(newImage);\r\n      setNewPhotoUrl(URL.createObjectURL(newImage));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className={classes.button} color=\"secondary\" variant=\"contained\" onClick={handleClickOpen}>\r\n        Edit profile\r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} fullWidth>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Edit profile\r\n        </DialogTitle>\r\n        <Formik\r\n          validationSchema={loginSchema}\r\n          initialValues={initialProfile}\r\n          onSubmit={(formData) => {\r\n            console.log(formData);\r\n            const { status } = formData;\r\n            dispatch(saveProfile(formData));\r\n            dispatch(updateStatus(status));\r\n            dispatch(savePhoto(newPhotoFile));\r\n          }}\r\n        >\r\n          {({ errors, touched, isSubmitting }) => (\r\n            <Form>\r\n              <Box>\r\n                <DialogContent dividers>\r\n                  <Box>\r\n                    <Typography color=\"secondary\" component=\"h1\" variant=\"h6\" gutterBottom>\r\n                      <strong>Change profile photo</strong>\r\n                      <Button\r\n                      className={classes.button + ' ' + classes.uploadPhoto}\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                        //className={classes.uploadPhoto}\r\n                      >\r\n                        Upload photo\r\n                        <input type=\"file\" hidden name=\"photos.large\" onChange={onSavePhoto} />\r\n                      </Button>\r\n                    </Typography>\r\n                    <Avatar\r\n                      variant=\"rounded\"\r\n                      alt={profile.fullName}\r\n                      src={newPhotoUrl || profile.photos.large}\r\n                      className={classes.avatar}\r\n                      aria-label=\"recipe\"\r\n                    >\r\n                      {profile.fullName[0].toUpperCase()}\r\n                    </Avatar>\r\n                  </Box>\r\n                  <Typography\r\n                    color=\"secondary\"\r\n                    component=\"h1\"\r\n                    variant=\"h6\"\r\n                    className={classes.title}\r\n                  >\r\n                    <strong>Change main info</strong>\r\n                  </Typography>\r\n                  <Field as={TextField} fullWidth type=\"text\" name=\"fullName\" label=\"Enter name\" />\r\n                  <Field as={TextField} fullWidth type=\"text\" name=\"status\" label=\"Enter status\" />\r\n                  <Field\r\n                    as={FormControlLabel}\r\n                    name=\"lookingForAJob\"\r\n                    control={<Checkbox color=\"primary\" defaultChecked={profile.lookingForAJob} />}\r\n                    label=\"Looking for a job\"\r\n                  />\r\n                  <Field\r\n                    as={TextField}\r\n                    fullWidth\r\n                    type=\"text\"\r\n                    name=\"lookingForAJobDescription\"\r\n                    label=\"My professional skills\"\r\n                  />\r\n                  <Field as={TextField} fullWidth type=\"text\" name=\"aboutMe\" label=\"AboutMe\" />\r\n                  <Typography\r\n                    color=\"secondary\"\r\n                    component=\"h1\"\r\n                    variant=\"h6\"\r\n                    className={classes.title}\r\n                  >\r\n                    <strong>Change contacts</strong>\r\n                  </Typography>\r\n                  <Box>\r\n                    <ContactsFields errors={errors} touched={touched} contacts={profile.contacts} />\r\n                    {/* <Field\r\n                color=\"primary\"\r\n                as={TextField}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"contacts.facebook\"\r\n                label=\"facebook\"\r\n                type=\"text\"\r\n                error={Boolean(errors.contacts?.facebook)}\r\n                helperText={touched.contacts?.facebook ? errors.contacts?.facebook : ''} */}\r\n                  </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button\r\n                  className={classes.button}\r\n                    autoFocus\r\n                    type=\"submit\"\r\n                    onClick={handleClose}\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    disabled={isSubmitting}\r\n                  >\r\n                    Save changes\r\n                  </Button>\r\n                </DialogActions>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ContactsFieldsPropsType = {\r\n  contacts: ContactsType;\r\n  errors: any;\r\n  touched: any;\r\n};\r\n\r\nconst ContactsFields: FC<ContactsFieldsPropsType> = ({ contacts, errors, touched }) => {\r\n  return (\r\n    <div>\r\n      {Object.keys(contacts).map((key) => {\r\n        return (\r\n          <Field\r\n            key={key}\r\n            as={TextField}\r\n            fullWidth\r\n            type=\"text\"\r\n            name={'contacts.' + key}\r\n            label={key[0].toLocaleUpperCase() + key.slice(1)}\r\n            //error={Boolean(errors.contacts.facebook)}\r\n            //helperText={touched.contacts.facebook ? errors.contacts.facebook : ''}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\ninterface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon color=\"secondary\" />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    height: theme.spacing(50),\r\n    '& > *': {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { FC } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ProfileType } from '../../../types/types';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport { Contacts } from './Contacts';\r\nimport { EditDialog } from './EditDialog';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    marginTop: 15,\r\n  },\r\n  paper: {\r\n    maxWidth: 700,\r\n    marginBottom: 15,\r\n    margin: '0 auto',\r\n    padding: 12,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  contactsPaper: {\r\n    maxWidth: 700,\r\n    margin: '0 auto',\r\n    padding: 12,\r\n    marginBottom: 12,\r\n  },\r\n  button: {\r\n    '&:hover': { background: '#ff3300' },\r\n    width: '100px',\r\n    position: 'relative',\r\n  },\r\n  avatar: {\r\n    width: 350,\r\n    height: 350,\r\n    backgroundColor: '#f3673b',\r\n    marginRight: 12,\r\n    fontSize: 128,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n  },\r\n  decriptionBox: {\r\n    marginLeft: 12,\r\n  },\r\n  contacts: {\r\n    maxWidth: 700,\r\n  },\r\n  contactsIcons: {\r\n    color: '#f3673b',\r\n    marginRight: 6,\r\n  },\r\n});\r\n\r\ntype PropsType = {\r\n  backBtnPath?: string | null;\r\n  editProfile?: boolean;\r\n  profile: ProfileType;\r\n  status: string;\r\n};\r\n\r\nexport const PeopleProfile: FC<PropsType> = ({ profile, status, backBtnPath, editProfile }) => {\r\n  const classes = useStyles();\r\n\r\n  let history = useHistory();\r\n  const redirect = () => {\r\n    if (backBtnPath) history.push({ pathname: `/${backBtnPath}` });\r\n  };\r\n\r\n  if (!profile) return <Preloader />;\r\n  const contacts = profile.contacts;\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      {backBtnPath && (\r\n        <Button onClick={redirect} color=\"secondary\" className={classes.button} variant=\"contained\">\r\n          back\r\n        </Button>\r\n      )}\r\n      <Paper className={classes.paper}>\r\n        <Avatar\r\n          variant=\"rounded\"\r\n          alt={profile.fullName}\r\n          src={profile.photos.large}\r\n          className={classes.avatar}\r\n          aria-label=\"recipe\"\r\n        >\r\n          {profile.fullName[0].toUpperCase()}\r\n        </Avatar>\r\n        <Box>\r\n          <Typography variant=\"h4\">{profile.fullName}</Typography>\r\n          <Typography variant=\"h6\">{status || 'No status'}</Typography>\r\n          {editProfile && <EditDialog />}\r\n        </Box>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <Box className={classes.decriptionBox}>\r\n          <Typography variant=\"h4\">Desription</Typography>\r\n          <Box className={classes.decriptionBox}>\r\n            <Typography variant=\"subtitle1\"> - About me: {profile.aboutMe}</Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              - Looking for a job: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              - My professional skills: {profile.lookingForAJobDescription}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n      <Paper className={classes.contactsPaper}>\r\n        <Accordion className={classes.contacts}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <Typography variant=\"h4\">Contacts</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Contacts contacts={contacts} />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getStatus, getUserProfile } from '../../redux/profileReducer';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\nimport { PeopleProfile } from '../Users/PeopleProfile/PeopleProfile';\r\n\r\nconst MyProfilePage = () => {\r\n  const userId = useSelector((state: AppStateType) => state.auth.userId) as number;\r\n  const profile = useSelector((state: AppStateType) => state.profilePage.profile);\r\n  const status = useSelector((state: AppStateType) => state.profilePage.status);\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(getStatus(userId));\r\n    dispatch(getUserProfile(userId));\r\n  }, [userId]);\r\n\r\n  return <div>{profile && <PeopleProfile profile={profile} status={status} editProfile />}</div>;\r\n};\r\n\r\nexport default MyProfilePage"],"sourceRoot":""}