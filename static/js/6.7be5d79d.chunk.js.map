{"version":3,"sources":["redux/usersSelectors.ts","components/Users/PeopleProfile/Contacts.tsx","components/Users/PeopleProfile/EditDialog.tsx","components/Users/PeopleProfile/PeopleProfile.tsx","components/Users/SearchForm.tsx","components/Users/User.tsx","components/common/Paginator/PaginatorMUI.tsx","components/Users/Users.tsx","components/Users/FindPeoplePage.tsx"],"names":["getUsers","createSelector","state","usersPage","users","filter","u","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getFilter","Contacts","contacts","contactsIcons","List","Object","keys","map","key","index","ListItem","Box","style","color","marginRight","Typography","variant","toLocaleUpperCase","slice","useStyles","makeStyles","avatar","width","height","backgroundColor","fontSize","margin","uploadPhoto","marginBottom","float","title","marginTop","button","background","loginSchema","Yup","shape","facebook","url","EditDialog","classes","profile","useSelector","profilePage","status","useState","open","setOpen","newPhotoFile","setNewPhotoFile","newPhotoUrl","setNewPhotoUrl","dispatch","useDispatch","Preloader","initialProfile","vk","github","instagram","mainLink","twitter","website","youtube","handleClose","onSavePhoto","e","target","files","length","newImage","URL","createObjectURL","Button","className","onClick","Dialog","onClose","aria-labelledby","fullWidth","id","validationSchema","initialValues","onSubmit","formData","console","log","saveProfile","updateStatus","savePhoto","errors","touched","isSubmitting","dividers","component","gutterBottom","type","hidden","name","onChange","Avatar","alt","fullName","src","photos","large","aria-label","toUpperCase","as","TextField","label","FormControlLabel","control","Checkbox","defaultChecked","lookingForAJob","autoFocus","disabled","ContactsFields","DialogTitle","withStyles","theme","createStyles","root","padding","spacing","closeButton","position","right","top","palette","grey","props","children","other","disableTypography","IconButton","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","container","paper","maxWidth","display","flexDirection","contactsPaper","link","textDecoration","decriptionBox","marginLeft","PeopleProfile","backBtnPath","editProfile","history","useHistory","Container","push","pathname","Paper","aboutMe","lookingForAJobDescription","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","tm","alignSelf","box","justifyContent","select","minWidth","input","SearchForm","onSearch","selector","enableReinitialize","term","friend","String","values","setSubmitting","Select","value","UserCard","path","user","toggleFollowUser","to","small","action","some","followed","titleTypographyProps","subheader","ul","PaginatorMUI","totalItemsCount","onChangeCurrentPage","pagesCount","Math","ceil","Pagination","count","page","event","alignItems","Users","useEffect","parsed","queryString","location","search","substr","actualFilter","actualPage","Number","requestUsers","query","userId","toggleFollow","pageNumber","actions","setCurrentPage","User","FindPeoplePage","peopleProfile","useParams","isLoadingProfile","SetIsLoadingProfile","getPeopleProfile","deletePeopleProfile"],"mappings":"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","file":"static/js/6.7be5d79d.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\nimport { AppStateType } from \"./reduxStore\";\r\n\r\nexport const getUsersSelector = (state: AppStateType) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector,(users) => {\r\n  return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n  return state.usersPage.followingInProgress;\r\n};\r\nexport const getFilter = (state: AppStateType) => {\r\n  return state.usersPage.filter;\r\n};\r\n","import { Box, List, ListItem, Typography } from '@material-ui/core';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport WebIcon from '@material-ui/icons/Web';\r\nimport YouTubeIcon from '@material-ui/icons/YouTube';\r\nimport React, { FC } from 'react';\r\nimport { ContactsType } from '../../../types/types';\r\n\r\ntype ContactsPropsType = {\r\n  contacts: ContactsType;\r\n};\r\n\r\nexport const Contacts: FC<ContactsPropsType> = ({ contacts }) => {\r\n  let contactsIcons = [\r\n    <FacebookIcon />,\r\n    <WebIcon />,\r\n    <ContactsIcon />,\r\n    <TwitterIcon />,\r\n    <InstagramIcon />,\r\n    <YouTubeIcon />,\r\n    <GitHubIcon />,\r\n    <LinkIcon />,\r\n  ];\r\n\r\n  return (\r\n    <List>\r\n      {(Object.keys(contacts) as Array<keyof typeof contacts>).map((key, index) => {\r\n        return (\r\n          <ListItem key={index}>\r\n            <Box style={{ color: '#f3673b', marginRight: 6 }}>{contactsIcons[index]}</Box>\r\n            <Typography variant=\"subtitle1\">\r\n              {key[0].toLocaleUpperCase() + key.slice(1)}: {contacts[key]}\r\n            </Typography>\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n","import { Avatar, Box, Checkbox, FormControlLabel, TextField } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport React, { ChangeEvent, FC, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { savePhoto, saveProfile, updateStatus } from '../../../redux/profileReducer';\r\nimport { AppStateType } from '../../../redux/reduxStore';\r\nimport { ContactsType } from '../../../types/types';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    width: 350,\r\n    height: 350,\r\n    backgroundColor: '#f3673b',\r\n    fontSize: 128,\r\n    margin: '16px auto',\r\n  },\r\n  uploadPhoto: {\r\n    marginBottom: 10,\r\n    float: 'right',\r\n  },\r\n  title: {\r\n    marginTop: 16,\r\n  },\r\n  button: {\r\n    '&:hover': { background: '#ff3300' },\r\n    \r\n  },\r\n});\r\n\r\nconst loginSchema = Yup.object().shape({\r\n  facebook: Yup.string().url(),\r\n});\r\n\r\nexport const EditDialog = () => {\r\n  const classes = useStyles();\r\n\r\n  const profile = useSelector((state: AppStateType) => state.profilePage.profile);\r\n  const status = useSelector((state: AppStateType) => state.profilePage.status);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [newPhotoFile, setNewPhotoFile] = useState<any>();\r\n  const [newPhotoUrl, setNewPhotoUrl] = useState<any>();\r\n  \r\n  const dispatch = useDispatch();\r\n  if (!profile) return <Preloader />;\r\n\r\n  const initialProfile = {\r\n    ...profile,\r\n    contacts: {\r\n      facebook: profile.contacts.facebook ? profile.contacts.facebook : '',\r\n      vk: profile.contacts.vk ? profile.contacts.vk : '',\r\n      github: profile.contacts.github ? profile.contacts.github : '',\r\n      instagram: profile.contacts.instagram ? profile.contacts.instagram : '',\r\n      mainLink: profile.contacts.mainLink ? profile.contacts.mainLink : '',\r\n      twitter: profile.contacts.twitter ? profile.contacts.twitter : '',\r\n      website: profile.contacts.website ? profile.contacts.website : '',\r\n      youtube: profile.contacts.youtube ? profile.contacts.youtube : '',\r\n    },\r\n    status,\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setNewPhotoUrl('');\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onSavePhoto = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files.length) {\r\n      const newImage = e.target.files[0];\r\n      setNewPhotoFile(newImage);\r\n      setNewPhotoUrl(URL.createObjectURL(newImage));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className={classes.button} color=\"secondary\" variant=\"contained\" onClick={handleClickOpen}>\r\n        Edit profile\r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} fullWidth>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Edit profile\r\n        </DialogTitle>\r\n        <Formik\r\n          validationSchema={loginSchema}\r\n          initialValues={initialProfile}\r\n          onSubmit={(formData) => {\r\n            console.log(formData);\r\n            const { status } = formData;\r\n            dispatch(saveProfile(formData));\r\n            dispatch(updateStatus(status));\r\n            dispatch(savePhoto(newPhotoFile));\r\n          }}\r\n        >\r\n          {({ errors, touched, isSubmitting }) => (\r\n            <Form>\r\n              <Box>\r\n                <DialogContent dividers>\r\n                  <Box>\r\n                    <Typography color=\"secondary\" component=\"h1\" variant=\"h6\" gutterBottom>\r\n                      <strong>Change profile photo</strong>\r\n                      <Button\r\n                      className={classes.button + ' ' + classes.uploadPhoto}\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        component=\"label\"\r\n                        //className={classes.uploadPhoto}\r\n                      >\r\n                        Upload photo\r\n                        <input type=\"file\" hidden name=\"photos.large\" onChange={onSavePhoto} />\r\n                      </Button>\r\n                    </Typography>\r\n                    <Avatar\r\n                      variant=\"rounded\"\r\n                      alt={profile.fullName}\r\n                      src={newPhotoUrl || profile.photos.large}\r\n                      className={classes.avatar}\r\n                      aria-label=\"recipe\"\r\n                    >\r\n                      {profile.fullName[0].toUpperCase()}\r\n                    </Avatar>\r\n                  </Box>\r\n                  <Typography\r\n                    color=\"secondary\"\r\n                    component=\"h1\"\r\n                    variant=\"h6\"\r\n                    className={classes.title}\r\n                  >\r\n                    <strong>Change main info</strong>\r\n                  </Typography>\r\n                  <Field as={TextField} fullWidth type=\"text\" name=\"fullName\" label=\"Enter name\" />\r\n                  <Field as={TextField} fullWidth type=\"text\" name=\"status\" label=\"Enter status\" />\r\n                  <Field\r\n                    as={FormControlLabel}\r\n                    name=\"lookingForAJob\"\r\n                    control={<Checkbox color=\"primary\" defaultChecked={profile.lookingForAJob} />}\r\n                    label=\"Looking for a job\"\r\n                  />\r\n                  <Field\r\n                    as={TextField}\r\n                    fullWidth\r\n                    type=\"text\"\r\n                    name=\"lookingForAJobDescription\"\r\n                    label=\"My professional skills\"\r\n                  />\r\n                  <Field as={TextField} fullWidth type=\"text\" name=\"aboutMe\" label=\"AboutMe\" />\r\n                  <Typography\r\n                    color=\"secondary\"\r\n                    component=\"h1\"\r\n                    variant=\"h6\"\r\n                    className={classes.title}\r\n                  >\r\n                    <strong>Change contacts</strong>\r\n                  </Typography>\r\n                  <Box>\r\n                    <ContactsFields errors={errors} touched={touched} contacts={profile.contacts} />\r\n                    {/* <Field\r\n                color=\"primary\"\r\n                as={TextField}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"contacts.facebook\"\r\n                label=\"facebook\"\r\n                type=\"text\"\r\n                error={Boolean(errors.contacts?.facebook)}\r\n                helperText={touched.contacts?.facebook ? errors.contacts?.facebook : ''} */}\r\n                  </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button\r\n                  className={classes.button}\r\n                    autoFocus\r\n                    type=\"submit\"\r\n                    onClick={handleClose}\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    disabled={isSubmitting}\r\n                  >\r\n                    Save changes\r\n                  </Button>\r\n                </DialogActions>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ContactsFieldsPropsType = {\r\n  contacts: ContactsType;\r\n  errors: any;\r\n  touched: any;\r\n};\r\n\r\nconst ContactsFields: FC<ContactsFieldsPropsType> = ({ contacts, errors, touched }) => {\r\n  return (\r\n    <div>\r\n      {Object.keys(contacts).map((key) => {\r\n        return (\r\n          <Field\r\n            key={key}\r\n            as={TextField}\r\n            fullWidth\r\n            type=\"text\"\r\n            name={'contacts.' + key}\r\n            label={key[0].toLocaleUpperCase() + key.slice(1)}\r\n            //error={Boolean(errors.contacts.facebook)}\r\n            //helperText={touched.contacts.facebook ? errors.contacts.facebook : ''}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\ninterface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon color=\"secondary\" />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    height: theme.spacing(50),\r\n    '& > *': {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n","import {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { FC } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ProfileType } from '../../../types/types';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport { Contacts } from './Contacts';\r\nimport { EditDialog } from './EditDialog';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    marginTop: 15,\r\n  },\r\n  paper: {\r\n    maxWidth: 700,\r\n    marginBottom: 15,\r\n    margin: '0 auto',\r\n    padding: 12,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  contactsPaper: {\r\n    maxWidth: 700,\r\n    margin: '0 auto',\r\n    padding: 12,\r\n    marginBottom: 12,\r\n  },\r\n  button: {\r\n    '&:hover': { background: '#ff3300' },\r\n    width: '100px',\r\n    position: 'relative',\r\n  },\r\n  avatar: {\r\n    width: 350,\r\n    height: 350,\r\n    backgroundColor: '#f3673b',\r\n    marginRight: 12,\r\n    fontSize: 128,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n  },\r\n  decriptionBox: {\r\n    marginLeft: 12,\r\n  },\r\n  contacts: {\r\n    maxWidth: 700,\r\n  },\r\n  contactsIcons: {\r\n    color: '#f3673b',\r\n    marginRight: 6,\r\n  },\r\n});\r\n\r\ntype PropsType = {\r\n  backBtnPath?: string | null;\r\n  editProfile?: boolean;\r\n  profile: ProfileType;\r\n  status: string;\r\n};\r\n\r\nexport const PeopleProfile: FC<PropsType> = ({ profile, status, backBtnPath, editProfile }) => {\r\n  const classes = useStyles();\r\n\r\n  let history = useHistory();\r\n  const redirect = () => {\r\n    if (backBtnPath) history.push({ pathname: `/${backBtnPath}` });\r\n  };\r\n\r\n  if (!profile) return <Preloader />;\r\n  const contacts = profile.contacts;\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      {backBtnPath && (\r\n        <Button onClick={redirect} color=\"secondary\" className={classes.button} variant=\"contained\">\r\n          back\r\n        </Button>\r\n      )}\r\n      <Paper className={classes.paper}>\r\n        <Avatar\r\n          variant=\"rounded\"\r\n          alt={profile.fullName}\r\n          src={profile.photos.large}\r\n          className={classes.avatar}\r\n          aria-label=\"recipe\"\r\n        >\r\n          {profile.fullName[0].toUpperCase()}\r\n        </Avatar>\r\n        <Box>\r\n          <Typography variant=\"h4\">{profile.fullName}</Typography>\r\n          <Typography variant=\"h6\">{status || 'No status'}</Typography>\r\n          {editProfile && <EditDialog />}\r\n        </Box>\r\n      </Paper>\r\n      <Paper className={classes.paper}>\r\n        <Box className={classes.decriptionBox}>\r\n          <Typography variant=\"h4\">Desription</Typography>\r\n          <Box className={classes.decriptionBox}>\r\n            <Typography variant=\"subtitle1\"> - About me: {profile.aboutMe}</Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              - Looking for a job: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              - My professional skills: {profile.lookingForAJobDescription}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n      <Paper className={classes.contactsPaper}>\r\n        <Accordion className={classes.contacts}>\r\n          <AccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n          >\r\n            <Typography variant=\"h4\">Contacts</Typography>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <Contacts contacts={contacts} />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n","import { Field, Form, Formik } from 'formik';\r\nimport React, { FC } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getFilter } from '../../redux/usersSelectors';\r\nimport { FilterType } from '../../types/types';\r\nimport { Box, Button, MenuItem, Select, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { theme } from '../../index';\r\n\r\nconst useStyles = makeStyles((tm: typeof theme) => ({\r\n  button: {\r\n    '&:hover': { background: '#ff3300' },\r\n    marginRight: `10px`,\r\n    height: '36px',\r\n    alignSelf: 'center',\r\n  },\r\n  box: {\r\n    display: 'flex',\r\n    margin: '10px',\r\n    justifyContent: 'space-between',\r\n  },\r\n  select: {\r\n    marginTop: '16px',\r\n    minWidth: '100px',\r\n  },\r\n  input: {\r\n    maxWidth: '150px',\r\n  },\r\n}));\r\n\r\ntype SearchFormType = {\r\n  onSearch: (filter: FilterType) => void;\r\n  selector: boolean;\r\n};\r\ntype FriendFormType = 'null' | 'true' | 'false';\r\ntype ValuesFormType = {\r\n  term: string;\r\n  friend: FriendFormType;\r\n};\r\nexport const SearchForm: FC<SearchFormType> = ({ onSearch, selector }) => {\r\n  const classes = useStyles();\r\n  const filter = useSelector(getFilter);\r\n\r\n  return (\r\n    <Formik\r\n      enableReinitialize\r\n      initialValues={{ term: filter.term, friend: String(filter.friend) as FriendFormType }}\r\n      onSubmit={(\r\n        values: ValuesFormType,\r\n        { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\r\n      ) => {\r\n        const filter: FilterType = {\r\n          term: values.term,\r\n          friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false,\r\n        };\r\n        onSearch(filter);\r\n        setSubmitting(false);\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          <Box className={classes.box}>\r\n            <Box>\r\n              <Field\r\n                className={classes.input}\r\n                as={TextField}\r\n                type=\"text\"\r\n                name=\"term\"\r\n                label=\"Enter name\"\r\n                color=\"secondary\"\r\n              />\r\n              {selector && (\r\n                <Field className={classes.select} name=\"friend\" as={Select} color=\"secondary\">\r\n                  <MenuItem value=\"null\">All</MenuItem>\r\n                  <MenuItem value=\"true\">Only followed</MenuItem>\r\n                  <MenuItem value=\"false\">Only unfollowed</MenuItem>\r\n                </Field>\r\n              )}\r\n            </Box>\r\n            <Button\r\n              color=\"secondary\"\r\n              className={classes.button}\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n            >\r\n              Search\r\n            </Button>\r\n          </Box>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import React, { FC } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserType } from '../../types/types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Avatar, Button, Card, CardHeader } from '@material-ui/core';\r\n\r\ntype PropsType = {\r\n  path: string;\r\n  user: UserType;\r\n  followingInProgress: Array<number>;\r\n  toggleFollowUser: (userId: number, followed: boolean) => void;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 600,\r\n    marginBottom: 15,\r\n    margin: '0 auto',\r\n  },\r\n  button: {\r\n    '&:hover': { background: '#ff3300' },\r\n    width: '100px',\r\n    marginTop: '25%',\r\n    marginRight: '10px',\r\n  },\r\n  avatar: {\r\n    width: 80,\r\n    height: 80,\r\n    color: '#fff',\r\n    backgroundColor: '#f3673b',\r\n    fontSize: 36,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n  },\r\n});\r\n\r\nexport const UserCard: FC<PropsType> = ({ path, user, followingInProgress, toggleFollowUser }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} key={user.id}>\r\n      <CardHeader\r\n        avatar={\r\n          <NavLink className={classes.link} to={`/${path}/${user.id}`}>\r\n            <Avatar\r\n              onClick={() => {}}\r\n              alt={user.name}\r\n              src={user.photos.small}\r\n              className={classes.avatar}\r\n              aria-label=\"recipe\"\r\n            >\r\n              {user.name[0].toUpperCase()}\r\n            </Avatar>\r\n          </NavLink>\r\n        }\r\n        action={\r\n          <Button\r\n            color=\"secondary\"\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            disabled={followingInProgress.some((id) => id === user.id)}\r\n            onClick={() => toggleFollowUser(user.id, user.followed)}\r\n          >\r\n            {user.followed ? 'Unfollow' : 'Follow'}\r\n          </Button>\r\n        }\r\n        titleTypographyProps={{ variant: 'h6' }}\r\n        title={user.name}\r\n        subheader={user.status}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  ul: {\r\n    '& button.Mui-selected': {\r\n      '&:hover': { background: '#ff3300' },\r\n    },\r\n  },\r\n});\r\n\r\ntype PropsType = {\r\n  totalItemsCount: number;\r\n  pageSize: number;\r\n  currentPage: number;\r\n  onChangeCurrentPage: (pageNumber: number) => void;\r\n};\r\n\r\nconst PaginatorMUI: React.FC<PropsType> = ({\r\n  totalItemsCount,\r\n  pageSize,\r\n  currentPage,\r\n  onChangeCurrentPage,\r\n}) => {\r\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    if (value !== currentPage) {\r\n      onChangeCurrentPage(value);\r\n    }\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Pagination\r\n      classes={{ root: classes.ul }}\r\n      shape=\"rounded\"\r\n      color=\"secondary\"\r\n      count={pagesCount}\r\n      page={currentPage}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PaginatorMUI;\r\n","import { Box, Container, makeStyles } from '@material-ui/core';\r\nimport * as queryString from 'querystring';\r\nimport React, { FC, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { theme } from '../..';\r\nimport { actions, requestUsers, toggleFollow } from '../../redux/usersReducer';\r\nimport {\r\n  getCurrentPage,\r\n  getFilter,\r\n  getFollowingInProgress,\r\n  getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount,\r\n  getUsers,\r\n} from '../../redux/usersSelectors';\r\nimport { FilterType } from '../../types/types';\r\nimport PaginatorMUI from '../common/Paginator/PaginatorMUI';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { SearchForm } from './SearchForm';\r\nimport { UserCard } from './User';\r\n\r\nconst useStyles = makeStyles((tm: typeof theme) => ({\r\n  box: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: 16,\r\n  },\r\n}));\r\n\r\nconst Users: FC = () => {\r\n  const classes = useStyles();\r\n  const users = useSelector(getUsers);\r\n  const pageSize = useSelector(getPageSize);\r\n  const totalUsersCount = useSelector(getTotalUsersCount);\r\n  const currentPage = useSelector(getCurrentPage);\r\n  const followingInProgress = useSelector(getFollowingInProgress);\r\n  const isFetching = useSelector(getIsFetching);\r\n  const filter = useSelector(getFilter);\r\n\r\n  type QueryParamsType = {\r\n    term?: string;\r\n    page?: string;\r\n    friend?: string;\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType;\r\n    //console.log('history',parsed);\r\n    let actualFilter = filter;\r\n    let actualPage = currentPage;\r\n    if (!!parsed.page) actualPage = Number(parsed.page);\r\n    if (!!parsed.term) actualFilter = { ...actualFilter, term: parsed.term as string };\r\n\r\n    switch (parsed.friend) {\r\n      case 'null':\r\n        actualFilter = { ...actualFilter, friend: null };\r\n        break;\r\n      case 'true':\r\n        actualFilter = { ...actualFilter, friend: true };\r\n        break;\r\n      case 'false':\r\n        actualFilter = { ...actualFilter, friend: false };\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    dispatch(requestUsers(actualPage, pageSize, actualFilter));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const query: QueryParamsType = {};\r\n    if (!!filter.term) query.term = filter.term;\r\n    if (filter.friend !== null) query.friend = String(filter.friend);\r\n    if (currentPage !== 1) query.page = String(currentPage);\r\n    history.push({\r\n      pathname: '/people',\r\n      search: queryString.stringify(query),\r\n    });\r\n  }, [filter, currentPage, history]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleFollowUser = (userId: number, followed: boolean) => {\r\n    dispatch(toggleFollow(userId, followed));\r\n  };\r\n  const onSearch = (filter: FilterType) => {\r\n    dispatch(requestUsers(1, pageSize, filter));\r\n  };\r\n  const onChangeCurrentPage = (pageNumber: number) => {\r\n    dispatch(actions.setCurrentPage(pageNumber));\r\n    dispatch(requestUsers(pageNumber, pageSize, filter));\r\n  };\r\n\r\n  if (isFetching) return <Preloader />;\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <Box className={classes.box}>\r\n        <PaginatorMUI\r\n          totalItemsCount={totalUsersCount}\r\n          pageSize={pageSize}\r\n          onChangeCurrentPage={onChangeCurrentPage}\r\n          currentPage={currentPage}\r\n        />\r\n      </Box>\r\n      <SearchForm onSearch={onSearch} selector />\r\n\r\n      {users.map((u) => (\r\n        <UserCard\r\n          path={'people'}\r\n          key={u.id}\r\n          followingInProgress={followingInProgress}\r\n          toggleFollowUser={toggleFollowUser}\r\n          user={u}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { FC, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { deletePeopleProfile, getPeopleProfile } from '../../redux/peopleProfileReducer';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { PeopleProfile } from './PeopleProfile/PeopleProfile';\r\nimport Users from './Users';\r\n\r\nconst FindPeoplePage: FC = () => {\r\n  const profile = useSelector((state: AppStateType) => state.peopleProfile.profile);\r\n  const status = useSelector((state: AppStateType) => state.peopleProfile.status);\r\n\r\n  let { userId } = useParams<{ userId: string }>();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isLoadingProfile, SetIsLoadingProfile] = useState(false);\r\n  useEffect(() => {\r\n    if (userId) {\r\n      dispatch(getPeopleProfile(+userId));\r\n      SetIsLoadingProfile(true);\r\n    }\r\n    return () => {\r\n      dispatch(deletePeopleProfile());\r\n      SetIsLoadingProfile(false);\r\n    };\r\n  }, [userId]);\r\n\r\n  if (profile) {\r\n    return <PeopleProfile profile={profile} status={status} backBtnPath={'people'} />;\r\n  }\r\n  if (isLoadingProfile) {\r\n    return <Preloader />;\r\n  }\r\n  return <Users />;\r\n};\r\n\r\nexport default FindPeoplePage;\r\n"],"sourceRoot":""}