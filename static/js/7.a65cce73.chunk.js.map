{"version":3,"sources":["../node_modules/@material-ui/styles/esm/createStyles/createStyles.js","../node_modules/@material-ui/icons/Send.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","pages/ChatPage/Messages.tsx","pages/ChatPage/SendMessageForm.tsx","pages/ChatPage/ChatPage.tsx"],"names":["createStyles","styles","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","Divider","props","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","fade","middle","spacing","marginRight","alignSelf","name","Messages","messages","useSelector","state","chat","messagesRef","useRef","useState","isAutoScroll","SetIsAutoScroll","useEffect","current","scrollIntoView","block","behavior","style","overflow","onScroll","e","element","currentTarget","Math","abs","scrollHeight","scrollTop","clientHeight","map","m","index","Message","message","id","useStyles","makeStyles","marginBottom","display","avatar","color","fontSize","link","textDecoration","messageContainer","wordBreak","userName","lineHeight","memo","Box","to","userId","Avatar","alt","src","photo","aria-label","toUpperCase","Typography","padding","flexDirection","alignItems","input","flexGrow","iconButton","float","SendMessageForm","status","dispatch","useDispatch","initialValues","newMessage","onSubmit","formData","resetForm","sendMessage","as","InputBase","type","autoComplete","IconButton","disabled","container","marginTop","paper","Chat","ChatPage","startMessagesListening","stopMessagesListening","Container","maxWidth","disableGutters","Paper","Preloader"],"mappings":"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","file":"static/js/7.a65cce73.chunk.js","sourcesContent":["export default function createStyles(styles) {\n  return styles;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import { Avatar, Box, Card, CardHeader, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\n\r\ntype ChatMessageType = {\r\n  message: string;\r\n  photo: string;\r\n  userId: number;\r\n  userName: string;\r\n};\r\n\r\nexport const Messages = () => {\r\n  const messages = useSelector((state: AppStateType) => state.chat.messages);\r\n  const messagesRef = useRef<HTMLDivElement>(null);\r\n  const [isAutoScroll, SetIsAutoScroll] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isAutoScroll) {\r\n      messagesRef.current?.scrollIntoView({ block: 'end', behavior: 'smooth' });\r\n    }\r\n  }, [messages]);\r\n\r\n  const ScrollHandler = (e: React.UIEvent) => {\r\n    const element = e.currentTarget;\r\n    if (Math.abs(element.scrollHeight - element.scrollTop - element.clientHeight) < 300) {\r\n      SetIsAutoScroll(true);\r\n    } else {\r\n      SetIsAutoScroll(false);\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ height: '600px', overflow: 'auto' }} onScroll={ScrollHandler}>\r\n      {messages.map((m, index) => (\r\n        <Message key={m.id} message={m} />\r\n      ))}\r\n      <div ref={messagesRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginBottom: 15,\r\n    display: 'flex',\r\n    margin: 12,\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n    color: '#fff',\r\n    backgroundColor: '#f3673b',\r\n    fontSize: 36,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n  },\r\n  messageContainer: {\r\n    marginLeft: 10,\r\n  },\r\n  message: {\r\n    wordBreak: 'break-word',\r\n  },\r\n  userName: {\r\n    lineHeight: 1.25\r\n  }\r\n});\r\n\r\nconst Message: FC<{ message: ChatMessageType }> = React.memo(({ message }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <NavLink className={classes.link} to={`/people/${message.userId}`}>\r\n        <Avatar\r\n          alt={message.userName}\r\n          src={message.photo}\r\n          className={classes.avatar}\r\n          aria-label=\"recipe\"\r\n        >\r\n          {message.userName[0].toUpperCase()}\r\n        </Avatar>\r\n      </NavLink>\r\n      <Box className={classes.messageContainer}>\r\n        <Typography color=\"secondary\" component=\"h1\" variant=\"h6\" className={classes.userName}>\r\n          <strong>\r\n          {message.userName}\r\n            </strong>\r\n        </Typography>\r\n        <Typography variant=\"body1\" className={classes.message}>{message.message}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n});\r\n","import { Box, Button, Divider, IconButton, InputBase, TextField, Theme } from '@material-ui/core';\r\nimport { createStyles, makeStyles } from '@material-ui/styles';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { sendMessage } from '../../redux/chatReducer';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\nimport SendIcon from '@material-ui/icons/Send';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: '2px 4px',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    input: {\r\n      marginLeft: theme.spacing(1),\r\n      flexGrow: 4,\r\n      fontSize: 18\r\n    },\r\n    iconButton: {\r\n      padding: 10,\r\n      float: 'right',\r\n    },\r\n  })\r\n);\r\n\r\nexport const SendMessageForm = () => {\r\n  const classes = useStyles();\r\n\r\n  const status = useSelector((state: AppStateType) => state.chat.status);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    \r\n      <Formik\r\n        initialValues={{ newMessage: '' }}\r\n        onSubmit={(formData, { resetForm }) => {\r\n          dispatch(sendMessage(formData.newMessage));\r\n          resetForm({});\r\n        }}\r\n      >\r\n        <Form className={classes.root}>\r\n        \r\n          <Field\r\n            as={InputBase}\r\n            type=\"text\"\r\n            autoComplete='off'\r\n            name=\"newMessage\"\r\n            color=\"secondary\"\r\n            className={classes.input}\r\n          />\r\n          <IconButton\r\n            disabled={status !== 'ready'}\r\n            type=\"submit\"\r\n            color=\"secondary\"\r\n            className={classes.iconButton}\r\n            aria-label=\"search\"\r\n          >\r\n            <SendIcon style={{fontSize: 28}}/>\r\n          </IconButton>\r\n        </Form>\r\n      </Formik>\r\n    \r\n  );\r\n};\r\n","import { Container, Divider, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Preloader from '../../components/common/Preloader/Preloader';\r\nimport { startMessagesListening, stopMessagesListening } from '../../redux/chatReducer';\r\nimport { AppStateType } from '../../redux/reduxStore';\r\nimport { Messages } from './Messages';\r\nimport { SendMessageForm } from './SendMessageForm';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    marginTop: 15,\r\n  },\r\n  paper: {\r\n    padding: 20\r\n  },\r\n});\r\n\r\nconst ChatPage = () => {\r\n  return <Chat />;\r\n};\r\nexport default ChatPage;\r\n\r\nconst Chat = () => {\r\n  const classes = useStyles();\r\n\r\n  const status = useSelector((state: AppStateType) => state.chat.status);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(startMessagesListening());\r\n\r\n    return () => {\r\n      dispatch(stopMessagesListening());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Container className={classes.container} maxWidth=\"sm\" disableGutters>\r\n      {status === 'ready' ? <Paper className={classes.container} >\r\n        {/* {status === 'error' && <div>{'error refresh page'}</div>} */}\r\n        <Messages />\r\n        <Divider />\r\n        <SendMessageForm />\r\n      </Paper> : <Preloader />\r\n}\r\n    </Container>\r\n  );\r\n};\r\n"],"sourceRoot":""}