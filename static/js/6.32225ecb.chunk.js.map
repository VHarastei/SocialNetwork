{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx","utils/validators/validators.js","components/Dialogs/Dialogs.module.css"],"names":["DialogItem","props","path","id","className","s","dialog","active","to","src","alt","name","Message","message","SendMessageForm","onSubmit","obj","sendMessage","newMessageText","handleSubmit","validate","maxLength","input","meta","fieldControl","error","type","placeholder","touched","Dialogs","dialogsPage","dialogElements","dialogs","map","d","messageElements","messages","m","isAuth","dialogsItems","mapStateToPropsForRedirect","state","auth","compose","connect","dispatch","sendMessageCreator","Component","required","value","undefined","max","length","composeValidators","validators","reduce","validator","module","exports"],"mappings":"gNAiBeA,EAbI,SAACC,GAClB,IAAIC,EAAI,mBAAeD,EAAME,IAE7B,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,eAAC,IAAD,CAASC,GAAIN,EAAb,cAAoB,qBAClBO,IAAI,sGACJC,IAAI,QACHT,EAAMU,WCJAC,EAJC,SAACX,GACf,OAAO,qBAAKG,UAAWC,IAAEQ,QAAlB,SAA4BZ,EAAMY,WC0BvCC,EAAkB,SAACb,GACrB,OACE,cAAC,IAAD,CACEc,SAAU,SAACC,GACTf,EAAMgB,YAAYD,EAAIE,gBACtBF,EAAIE,eAAiB,IAHzB,SAMG,gBAAGC,EAAH,EAAGA,aAAH,OACC,uBAAMJ,SAAUI,EAAhB,UACE,cAAC,IAAD,CAAOR,KAAK,iBAAiBS,SAAUC,YAAU,KAAjD,SACG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,sBAAKnB,UAAWC,IAAEmB,aAAe,IAAMnB,IAAEoB,MAAzC,UACE,mCAAOC,KAAK,OAAOC,YAAY,qBAAwBL,IACtDC,EAAKE,OAASF,EAAKK,SAAW,+BAAOL,EAAKE,cAIjD,8BACE,wBAAQC,KAAK,SAAb,2BAQGG,EAlDC,SAAC5B,GACf,IAAI6B,EAAc7B,EAAM6B,YAEpBC,EAAiBD,EAAYE,QAAQC,KAAI,SAACC,GAAD,OAC3C,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAMR,GAAI+B,EAAE/B,QAE9BgC,EAAkBL,EAAYM,SAASH,KAAI,SAACI,GAAD,OAC7C,cAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASV,GAAIkC,EAAElC,QAGrC,OAAKF,EAAMqC,OAGT,sBAAKlC,UAAWC,IAAE2B,QAAlB,UACE,qBAAK5B,UAAWC,IAAEkC,aAAlB,SAAiCR,IACjC,gCACE,qBAAK3B,UAAWC,IAAE+B,SAAlB,SAA6BD,IAC7B,cAAC,EAAD,CAAiBlB,YAAahB,EAAMgB,oBAPhB,cAAC,IAAD,CAAUT,GAAI,YCdtCgC,EAA6B,SAACC,GAChC,MAAO,CACLH,OAAQG,EAAMC,KAAKJ,S,QCiBRK,sBACbC,aAhBoB,SAACH,GACrB,MAAO,CACLX,YAAaW,EAAMX,gBAIE,SAACe,GACxB,MAAO,CACL5B,YAAa,SAACC,GACZ2B,EAASC,YAAmB5B,UDPF,SAAC6B,GAO/B,OADqCH,YAAQJ,EAARI,EALb,SAAC3C,GACvB,OAAKA,EAAMqC,OACJ,cAACS,EAAD,eAAe9C,IADI,cAAC,IAAD,CAAUO,GAAI,gBCW7BmC,CAGbd,I,gCC1BF,sGAAO,IAAMmB,EAAW,SAACC,GAAD,OAAYA,OAAQC,EAAY,YAC3C7B,EAAY,SAAC8B,GAAD,OAAS,SAACF,GAAD,OAClCA,GAASA,EAAMG,QAAUD,EAAzB,4BAAoDA,EAApD,iBAAoED,IACvDG,EAAoB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAmB,SAACL,GAAD,OAClDK,EAAWC,QAAO,SAAC9B,EAAO+B,GAAR,OAAsB/B,GAAS+B,EAAUP,UAAQC,M,mBCHrEO,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW","file":"static/js/6.32225ecb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = `/dialogs/${props.id}`;\r\n\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={path}> <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTzdCnMXv32Be239UIoWX0J4CZZIdZkfDljCw&usqp=CAU\"\r\n        alt=\"img\"\r\n      />{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Field, Form } from 'react-final-form';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { maxLength } from '../../utils/validators/validators';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsPage = props.dialogsPage;\r\n\r\n  let dialogElements = dialogsPage.dialogs.map((d) => (\r\n    <DialogItem name={d.name} id={d.id} />\r\n  ));\r\n  let messageElements = dialogsPage.messages.map((m) => (\r\n    <Message message={m.message} id={m.id} />\r\n  ));\r\n\r\n  if (!props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogElements}</div>\r\n      <div>\r\n        <div className={s.messages}>{messageElements}</div>\r\n        <SendMessageForm sendMessage={props.sendMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet SendMessageForm = (props) => {\r\n  return (\r\n    <Form\r\n      onSubmit={(obj) => {\r\n        props.sendMessage(obj.newMessageText);\r\n        obj.newMessageText = '';\r\n      }}\r\n    >\r\n      {({ handleSubmit }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Field name=\"newMessageText\" validate={maxLength(300)}>\r\n            {({ input, meta }) => (\r\n              <div className={s.fieldControl + ' ' + s.error}>\r\n                <input type=\"text\" placeholder=\"Write new message\" {...input} />\r\n                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n              </div>\r\n            )}\r\n          </Field>\r\n          <div>\r\n            <button type=\"submit\">Send</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  let RedirectComponent = (props) => {\r\n    if (!props.isAuth) return <Redirect to={'/login'} />;\r\n    return <Component {...props} />;\r\n  };\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  sendMessageCreator,\r\n} from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\nimport { withAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageText) => {\r\n      dispatch(sendMessageCreator(newMessageText));\r\n    },\r\n  };\r\n};\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n","export const required = (value) => (value ? undefined : 'Required');\r\nexport const maxLength = (max) => (value) => \r\nvalue && value.length >= max ? `Maximum length is ${max} symbols` : undefined;\r\nexport const composeValidators = (...validators) => (value) =>\r\n  validators.reduce((error, validator) => error || validator(value), undefined);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3fWZl\",\"dialogsItems\":\"Dialogs_dialogsItems__3a2D5\",\"active\":\"Dialogs_active__5Veld\",\"messages\":\"Dialogs_messages__46psM\"};"],"sourceRoot":""}